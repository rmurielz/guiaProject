# Generated by Django 5.2.4 on 2025-08-12 23:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('empresa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('codigo_iso', models.CharField(max_length=10, unique=True, verbose_name='Código ISO de subdivisión')),
                ('geoname_id', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='GeoNames ID')),
            ],
            options={
                'verbose_name': 'División',
                'verbose_name_plural': 'Divisiones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('codigo_iso', models.CharField(max_length=2, unique=True, verbose_name='Código ISO')),
                ('geoname_id', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='GeoNames ID')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoIdentificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Tipo de ID',
                'verbose_name_plural': 'Tipos de ID',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoTercero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Tipo de tercero')),
            ],
            options={
                'verbose_name': 'Tipo de Tercero',
                'verbose_name_plural': 'Tipos de Tercero',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('geoname_id', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='GeoNames ID')),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ciudades', to='terceros.division', verbose_name='División')),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
                'ordering': ['nombre'],
                'unique_together': {('division', 'nombre')},
            },
        ),
        migrations.AddField(
            model_name='division',
            name='pais',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisiones', to='terceros.pais', verbose_name='País'),
        ),
        migrations.AlterUniqueTogether(
            name='division',
            unique_together={('pais', 'nombre')},
        ),
        migrations.CreateModel(
            name='Tercero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Modificación')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('nroid', models.CharField(max_length=30, verbose_name='Número ID')),
                ('digito_verificacion', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)], verbose_name='DV')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre / Razón Social')),
                ('nombre_comercial', models.CharField(blank=True, max_length=50, verbose_name='Nombre Comercial')),
                ('direccion', models.CharField(blank=True, max_length=100, verbose_name='Dirección')),
                ('contacto', models.CharField(blank=True, max_length=50, verbose_name='Nombre de Contacto')),
                ('cargo', models.CharField(blank=True, max_length=50, verbose_name='Cargo de Contacto')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('ciudad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='terceros.ciudad', verbose_name='Ciudad')),
                ('empresa', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='terceros', to='empresa.empresa', verbose_name='Empresa')),
                ('tipo_identificacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='identificaciones', to='terceros.tipoidentificacion', verbose_name='Tipo ID')),
                ('tipo_tercero', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='terceros', to='terceros.tipotercero', verbose_name='Tipo de Tercero')),
            ],
            options={
                'verbose_name': 'Tercero',
                'verbose_name_plural': 'Terceros',
                'ordering': ['nombre'],
                'unique_together': {('empresa', 'nroid')},
            },
        ),
    ]
